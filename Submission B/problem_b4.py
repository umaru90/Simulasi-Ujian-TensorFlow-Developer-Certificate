# -*- coding: utf-8 -*-
"""Problem_B4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rP4nAloDg9O4mKO0iivTel2xce8iJmb5
"""

!pip install keras_preprocessing --quiet
!pip install numpy==1.24.3 --quiet
!pip install pandas==2.0.3 --quiet
!pip install Pillow==10.0.0 --quiet
!pip install scipy==1.10.1 --quiet
!pip install tensorflow==2.13.0 --quiet
!pip install tensorflow-datasets==4.9.2 --quiet

# ===================================================================================================
# PROBLEM B4
#
# Build and train a classifier for the BBC-text dataset.
# This is a multiclass classification problem.
# Do not use lambda layers in your model.
#
# The dataset used in this problem is originally published in: http://mlg.ucd.ie/datasets/bbc.html.
#
# Desired accuracy and validation_accuracy > 91%
# ===================================================================================================

from sklearn.model_selection import train_test_split
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
import tensorflow as tf
import pandas as pd
import numpy as np

def solution_B4():
    bbc = pd.read_csv(
        'https://github.com/dicodingacademy/assets/raw/main/Simulation/machine_learning/bbc-text.csv')

    # DO NOT CHANGE THIS CODE
    # Make sure you used all of these parameters or you can not pass this test
    vocab_size = 1000
    embedding_dim = 16
    max_length = 120
    trunc_type = 'post'
    padding_type = 'post'
    oov_tok = "<OOV>"
    training_portion = .8

    # YOUR CODE HERE
    # Using "shuffle=False"
    training_sentences, validation_sentences, training_labels, validation_labels = train_test_split(
        bbc.text,
        bbc.category,
        train_size=training_portion,
        shuffle=False
    )
    tokenizer = Tokenizer(num_words=vocab_size, oov_token=oov_tok)
    tokenizer.fit_on_texts(training_sentences)

    padding = lambda sentences: \
        tf.keras.preprocessing.sequence.pad_sequences(tokenizer.texts_to_sequences(sentences),maxlen=max_length, truncating=trunc_type, padding=padding_type)

    train_padded, validation_padded = padding(training_sentences), padding(validation_sentences)

    label_tokenizer = Tokenizer()
    label_tokenizer.fit_on_texts(bbc.category)

    train_labels_final = np.array(label_tokenizer.texts_to_sequences(training_labels))
    validation_labels_final = np.array(label_tokenizer.texts_to_sequences(validation_labels))

    class myCallback(tf.keras.callbacks.Callback):
        def on_epoch_end(self, epoch, logs={}):
            if logs.get('val_accuracy') is not None and logs.get('val_accuracy') >= 0.92:
                print("\nReached 92% validation accuracy so cancelling training!")
                self.model.stop_training = True

    callbacks = myCallback()

    callback = myCallback()
    model = tf.keras.Sequential([
        tf.keras.layers.Embedding(input_dim=vocab_size, output_dim=embedding_dim, input_length=max_length),
        tf.keras.layers.Dropout(0.2),
        tf.keras.layers.Conv1D(64, 5, activation='relu'),
        tf.keras.layers.MaxPooling1D(pool_size=4),
        tf.keras.layers.LSTM(32),
        tf.keras.layers.Dense(6, activation='softmax')
    ])

    model.compile(optimizer=Adam(), loss='sparse_categorical_crossentropy', metrics=['accuracy'])
    history = model.fit(train_padded, train_labels_final, epochs=500, validation_data=(validation_padded, validation_labels_final), verbose=1, callbacks=[callback])

    # Make sure you are using "sparse_categorical_crossentropy" as a loss fuction

    return model

# The code below is to save your model as a .h5 file.
    # It will be saved automatically in your Submission folder.
if __name__ == '__main__':
    # DO NOT CHANGE THIS CODE
    model = solution_B4()
    model.save("model_B4.h5")

# You can also use this cell as a shortcut for downloading your model
from google.colab import files
files.download("model_B4.h5")