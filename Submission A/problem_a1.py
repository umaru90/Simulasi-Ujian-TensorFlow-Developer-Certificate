# -*- coding: utf-8 -*-
"""Problem_A1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19JSe-DdTg7t_RYCeZxPbguD0YMKJJcsz
"""

!pip install keras_preprocessing --quiet
!pip install numpy==1.24.3 --quiet
!pip install pandas==2.0.3 --quiet
!pip install Pillow==10.0.0 --quiet
!pip install scipy==1.10.1 --quiet
!pip install tensorflow==2.13.0 --quiet
!pip install tensorflow-datasets==4.9.2 --quiet

# =================================================================================
# PROBLEM A1
#
# Given two arrays, train a neural network model to match the X to the Y.
# Predict the model with new values of X [-2.0, 10.0]
# We provide the model prediction, do not change the code.
#
# The test infrastructure expects a trained model that accepts
# an input shape of [1].
# Do not use lambda layers in your model.
#
# Desired loss (MSE) < 1e-4
# =================================================================================


import numpy as np
import tensorflow as tf
from tensorflow import keras

class myCallback(tf.keras.callbacks.Callback):
    def on_epoch_end(self, epoch, logs={}):
        if(logs.get('loss')<1e-4):
            print("\nTarget telah dicapai, berhenti training !!!")
            self.model.stop_training = True

def solution_A1():
    # DO NOT CHANGE THIS CODE
    X = np.array([-4.0, -3.0, -2.0, -1.0, 0.0, 1.0,
                  2.0, 3.0, 4.0, 5.0], dtype=float)
    Y = np.array([5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0,
                  12.0, 13.0, 14.0, ], dtype=float)

    # YOUR CODE HERE
    callback = myCallback()
    model = keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])
    model.compile(optimizer='sgd', loss='mean_squared_error')
    model.fit(X,Y, epochs=1000, callbacks=callback)


    print(model.predict([-2.0, 10.0]))
    return model

# The code below is to save your model as a .h5 file.
# It will be saved automatically in your Submission folder.
if __name__ == '__main__':
    model = solution_A1()
    model.save("model_A1.h5")

import tensorflow as tf

# Check if you have the correct Tensorflow version
assert tf.__version__ == '2.13.0', f'You have TF{tf.__version__}. Please install the grader-compatible Tensorflow and select Runtime > Restart Session'

# Load the model you saved earlier
model = tf.keras.models.load_model("model_A1.h5", compile=False)

# Save the model with the compatible TF version
model.save("final_model_A1.h5")

# You can also use this cell as a shortcut for downloading your model
from google.colab import files
files.download("final_model_A1.h5")